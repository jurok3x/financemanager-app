get.most_popular_items.by_date_and_category_id = SELECT item_name, COUNT(item_name) as value, SUM (price) AS total\
			FROM item_table WHERE user_id = :userId AND category_id = :categoryId\
			AND CAST (date as text) LIKE :dateString\
			GROUP BY item_name ORDER BY value DESC OFFSET :offset ROWS\
			FETCH FIRST :limit ROW ONLY
get.most_popular_items.by_date = SELECT item_name, COUNT(item_name) as value, SUM (price) AS total\
			FROM item_table WHERE user_id = :userId\
			AND CAST (date as text) LIKE :dateString\
			GROUP BY item_name ORDER BY value DESC OFFSET :offset ROWS\
			FETCH FIRST :limit ROW ONLY
get.all_active_years = SELECT DISTINCT(EXTRACT (YEAR FROM date))\
			FROM item_table WHERE user_id = :userId \
			ORDER BY date_part
get.month_statistics = WITH months AS (SELECT * FROM generate_series(1, 12) AS t(n))\
			SELECT months.n as date_part, COALESCE(SUM(price), 0) AS total\
			FROM item_table RIGHT JOIN months ON EXTRACT(MONTH from date) = months.n\
			AND user_id = :userId AND CAST (date as text) LIKE :dateString\
			GROUP BY months.n ORDER BY months.n
get.month_statistics.by_category_id = WITH months AS (SELECT * FROM generate_series(1, 12) AS t(n))\
			SELECT months.n as date_part, COALESCE(SUM(price), 0) AS total\
			FROM item_table RIGHT JOIN months ON EXTRACT(MONTH from date) = months.n\
			AND user_id = :userId AND category_id = :categoryId\
			AND CAST (date as text) LIKE :dateString\
			GROUP BY months.n ORDER BY months.n
count.by_user_id_and_category_id_and_date = SELECT  COUNT(item_name) as value\
			FROM item_table WHERE user_id = :userId AND category_id = :categoryId\
			AND CAST (date as text) LIKE :dateString
find.by_user_id_and_category_id_and_date = SELECT * FROM item_table\
			WHERE user_id = :userId and category_id = :categoryId\
			AND CAST (date as text) LIKE :dateString\
			ORDER BY date OFFSET :offset ROWS\
			FETCH FIRST :limit ROW ONLY
find.by_user_id_and_date = SELECT * FROM item_table\
			WHERE user_id = :userId\
			AND CAST (date as text) LIKE :dateString\
			ORDER BY date OFFSET :offset ROWS\
			FETCH FIRST :limit ROW ONLY

